// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/notification/phone/twilio/twilio.go

// Package twilio is a generated GoMock package.
package twilio

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockTwilio is a mock of Twilio interface
type MockTwilio struct {
	ctrl     *gomock.Controller
	recorder *MockTwilioMockRecorder
}

// MockTwilioMockRecorder is the mock recorder for MockTwilio
type MockTwilioMockRecorder struct {
	mock *MockTwilio
}

// NewMockTwilio creates a new mock instance
func NewMockTwilio(ctrl *gomock.Controller) *MockTwilio {
	mock := &MockTwilio{ctrl: ctrl}
	mock.recorder = &MockTwilioMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTwilio) EXPECT() *MockTwilioMockRecorder {
	return m.recorder
}

// Call mocks base method
func (m *MockTwilio) Call(number string) error {
	ret := m.ctrl.Call(m, "Call", number)
	ret0, _ := ret[0].(error)
	return ret0
}

// Call indicates an expected call of Call
func (mr *MockTwilioMockRecorder) Call(number interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Call", reflect.TypeOf((*MockTwilio)(nil).Call), number)
}
